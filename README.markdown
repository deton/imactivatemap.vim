Vimでの日本語入力・編集用に別コマンドを割り当てる

日本語入力IMをオンにしてInsert modeを開始するためのNormal modeモード用mapです。
日本語を編集したい、というのは、Insert modeに入る際には意識しているので。

[`c`,`s`,`r`コマンドで、書き換え前の文字列に応じてIMオン/オフを切り替えるVimプラグインを作った](http://qiita.com/deton/items/ce21f80265753134e7e9)のですが、
日本語入力オン/オフが意図から外れる場合がたまにあってストレスになるので、
逆方向のアプローチとして、日本語で編集することを指定するコマンドを割り当てる方法の試行です。
vi的には、日本語入力IMオンにしてInsert modeを開始するコマンドを用意する方が
自然な気がしたので。

さらに、Insert modeのままでのIMオン/オフ切り替えは使わずに、
オンに切り替えたい場合は一度Insert modeを抜ける形にするのがvi的かもしれません。
Insert modeを抜けると必ずオフになるようにしておいて。
```
 imap <silent> <unique> <ESC> <ESC>:set imsearch=0 iminsert=0<CR>
```
つまり、
* `i`で始まり、ASCII文字列を入力して、`ESC`で終わるコマンドと、
* `gi`で始まり、日本語文字列を入力して、`ESC`で終わるコマンドとみなす形。

ただし、日本語入力メインで行う場合は、`i`のかわりに`gi`を打つのは面倒なので、
Insert modeを抜けてもオフにしない方がいいかもしれません。
その場合は、日本語入力オフでInsert modeを開始するコマンドを、
`qi`等に割り当てておくのがいいかも。
viを使い始めた時に`i`を打つのを面倒に感じたのと同様に、
慣れの問題かもしれないので、しばらく使ってみる予定です。

デフォルトでは、日本語入力IMオンにして編集を開始する以下のキーをmapします。
(`gI`と`GI`は同じです。他も同様。シフトキー押しっぱなしの方が入力しやすいので。
`gI`だけmapして`GI`をmapしたくない場合は、
~/.vimrcで`let g:explicitimi_mapuppercase = 0`と設定してください)
* `gi`
* `gI`
* `GI`
* `ga`
* `gA`
* `GA`
* `go`
* `gO`
* `GO`
* `gs`
* `gS`
* `GS`
* `gc`
* `gC`
* `GC`
* `gr`
* `gR`
* `GR`
* `g/`
* `g?`
* `gf`
* `gF`
* `GF`
* `gt`
* `gT`
* `GT`

デフォルトでは、打ちやすさを考慮して`g`に割り当てていますが、
`gi`, `gI`, `ga`, `go`, `gs`, `gr`, `gR`, `gf`, `gt`を上書きしてしまいます。
他のキーに割り当てるには、`g:explicitimi_prefixkey`を設定してください。
```
  let g:explicitimi_prefixkey = 'q'
```
候補となるキー:
* `q`: 少し打ちにくい。
* `m`: `ma`等はよく使うので、指が意識せずに動いてしまっていまいち。
* `s`: `cl`で代替可能なので。ただ個人的に`s`はよく使うのでつぶしたくない。

tcvimeでの設定例:
```vim
let explicitimi_activatefunc = 'tcvime#Activate'
```
